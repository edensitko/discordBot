rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return isAuthenticated() &&
        firestore.exists(/databases/(default)/documents/userRoles/$(request.auth.uid)) &&
        firestore.get(/databases/(default)/documents/userRoles/$(request.auth.uid)).data.role == 'admin';
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Profile images
    match /profiles/{userId}/{fileName} {
      allow read: if isAuthenticated();
      allow write: if isOwner(userId) || isAdmin();
    }

    // Post images
    match /posts/{postId}/{fileName} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated();
      allow delete: if isAdmin() || isOwner(request.auth.uid);
    }

    // Story images
    match /stories/{storyId}/{fileName} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated();
      allow delete: if isAdmin() || isOwner(request.auth.uid);
    }
  }
}
